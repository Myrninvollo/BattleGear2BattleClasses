@@ -5,6 +5,8 @@
 import java.util.Iterator;
 import java.util.List;
 import java.util.Set;
+
+import mods.battlegear2.packet.BattlegearSyncItemPacket;
 import net.minecraft.block.Block;
 import net.minecraft.entity.ai.attributes.ServersideAttributeMap;
 import net.minecraft.entity.boss.EntityDragon;
@@ -61,6 +63,15 @@
 
 public class EntityTrackerEntry
 {
+    /*
+	 * Mine & Blade: Notes Edits made by: nerd-boy
+	 *
+	 * Edits: 1 edit
+	 *
+	 * Added a small hook to allow battle items to be synced when
+	 * another player begins to be tracked. Further updates are handeled
+	 * elsewhere.
+	 */
     private static final Logger logger = LogManager.getLogger();
     public Entity myEntity;
     public int blocksDistanceThreshold;
@@ -441,7 +452,9 @@
                     if (this.myEntity instanceof EntityPlayer)
                     {
                         EntityPlayer entityplayer = (EntityPlayer)this.myEntity;
-
+                        //-----MB-Added-----
+                        //This is a hook to properly sync battleitems
+                        par1EntityPlayerMP.playerNetServerHandler.sendPacket(new BattlegearSyncItemPacket(entityplayer).generatePacket());
                         if (entityplayer.isPlayerSleeping())
                         {
                             par1EntityPlayerMP.playerNetServerHandler.sendPacket(new S0APacketUseBed(entityplayer, MathHelper.floor_double(this.myEntity.posX), MathHelper.floor_double(this.myEntity.posY), MathHelper.floor_double(this.myEntity.posZ)));
@@ -645,4 +658,4 @@
             par1EntityPlayerMP.destroyedItemsNetCache.add(Integer.valueOf(this.myEntity.getEntityId()));
         }
     }

